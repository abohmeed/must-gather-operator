apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .ObjectMeta.Name }}
  namespace: {{ .ObjectMeta.Namespace }}
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/infra
                operator: Exists
            weight: 1
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
      backoffLimit: 6
      restartPolicy: OnFailure     
      shareProcessNamespace: true
      containers:        
{{- $timeout := .Spec.MustGatherTimeout}}
{{- $mustGatherType := .Spec.MustGatherType }}
{{ range $index, $element := .Spec.MustGatherImages }}
      - command:
        - /bin/bash
        - -c 
        - |
          timeout {{ $timeout }} bash -x -c -- '/usr/bin/gather'
          status=$?
          if [[ $status -eq 124 || $status -eq 137 ]]; then
            echo "Gather timed out."
            exit 0
          fi
        image: {{ $element }}
        name: gather-{{ $index }}
        volumeMounts:
        - mountPath: /must-gather
          name: must-gather-output
{{- end }}
      - command:
        - /bin/bash
        - -c
        - |
          count=0
          until [ $count -gt 4 ]
          do
            while `pgrep -a gather > /dev/null`
            do
              echo "waiting for gathers to complete ..." 
              sleep 120
              count=0
            done
            echo "no gather is running ($count / 4)"
            ((count++))
            sleep 30
          done
          if [[ $mustGatherType = "upload" ]]; then
            /usr/local/bin/upload
            exit 0
          elif [[ $mustGatherType = "local-store" ]]; then
            /usr/local/bin/local-store
            exit 0
          else
            echo "Type not set or unknown type: $mustGatherType"
            exit 1
          fi
        image: THIS_STRING_WILL_BE_REPLACED_BUT_DONT_CHANGE_IT
        name: upload
        volumeMounts:
        - mountPath: /must-gather
          name: mustGatherType
        - mountPath: /must-gather-upload
          name: must-gather-upload
        env:
        {{ if .Spec.ProxyConfig.HTTPProxy -}}
        - name: http_proxy
          value: {{ .Spec.ProxyConfig.HTTPProxy }}
        {{ end -}}
        {{ if .Spec.ProxyConfig.HTTPSProxy -}}
        - name: https_proxy
          value: {{ .Spec.ProxyConfig.HTTPSProxy }}
        {{ end -}}
        {{ if .Spec.ProxyConfig.NoProxy -}}
        - name: no_proxy
          value: {{ .Spec.ProxyConfig.NoProxy }}
        {{ end -}}
        {{ if eq .Spec.MustGatherType "upload" }}
        - name: username
          valueFrom:
            secretKeyRef:
              name: {{ .Spec.CaseManagementAccountSecretRef.Name }}
              key: username
        - name: password
          valueFrom:
            secretKeyRef:
              name: {{ .Spec.CaseManagementAccountSecretRef.Name }}
              key: password
        - name: caseid
          value: "{{ .Spec.CaseID }}"
        {{ end -}}
        {{ if eq .Spec.MustGatherType "local-store" }}
        - name: ssh_username
          valueFrom:
            secretKeyRef:
              name: {{ .Spec.CaseManagementAccountSecretRef.Name }}
              key: ssh_username
        - name: ssh_password
          valueFrom:
            secretKeyRef:
              name: {{ .Spec.CaseManagementAccountSecretRef.Name }}
              key: ssh_password
        - name: filesystem
          value: "{{ .Spec.Filesystem }}"
        - name: remote_host
          value: "{{ .Spec.SshHost }}"
        {{ end -}}
        - name: must_gather_output
          value: /must-gather
        - name: must_gather_upload
          value: /must-gather-upload
        - name: internal_user
          value: "{{ .Spec.InternalUser }}"
        - name: mustGatherType
          value: {{ $mustGatherType }}
      serviceAccountName: {{ .Spec.ServiceAccountRef.Name }}
      volumes:
      - emptyDir: {}
        name: must-gather-output
      - emptyDir: {}
        name: must-gather-upload
        